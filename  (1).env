~/.../projects/event-flow $ npm run dev                          

> event-flow@2.0.0 dev                                           
> nodemon index
                                                                 
[nodemon] 3.1.10
[nodemon] to restart at any time, enter `rs`                     
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,cjs,json                   
[nodemon] starting `node index.js`
Server running at http://127.0.0.1:4000/
MongoDB connected to biographyhub-shard-00-00.wv3wf.mongodb.net
decoded: {                                                       
  _id: '6839092470607b20dd4ed723',
  fullName: 'Muslim students society of Nigeria OAU branch',     
  role: 'organizer',
  emailAddress: 'mssnoau@gmail.com',                             
  eventsAttended: [],
  password: '$2b$10$6BnlYZlUAgzT.z99xQpLzulRUNLmmYgtE4lPdKEd2tXY/
bKZzbgoS',
  createdAt: '2025-05-30T01:25:56.469Z',                         
  __v: 0,
  iat: 1748568381,                                               
  exp: 1748654781
}                                                                
req: <ref *2> IncomingMessage {
  _events: {                                                     
    close: undefined,
    error: undefined,                                            
    data: undefined,
    end: undefined,                                              
    readable: undefined
  },
  _readableState: ReadableState {
    highWaterMark: 65536,
    buffer: [],
    bufferIndex: 0,
    length: 0,
    pipes: [],
    awaitDrainWriters: null,
    [Symbol(kState)]: 1315084
  },
  _maxListeners: undefined,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Array],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 65536,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 193997060
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17564420,
      [Symbol(kBufferedValue)]: null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::4000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 15,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout 
{
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 37883,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 16,
        [Symbol(kAsyncContextFrame)]: undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::4000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 15,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout 
{
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 37883,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 16,
        [Symbol(kAsyncContextFrame)]: undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],
      __onFinished: [Function],
      end: [Function: end],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [Circular *1],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', por
t: 46436 },
    [Symbol(async_id_symbol)]: 386,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  rawHeaders: [
    'accept',
    '*/*',
    'user-agent',
    'Teste Android/7.6.1(652)',
    'Content-Type',
    'multipart/form-data; boundary=ReactNativeBlobUtil-aguks1szrw
bj125hgbi1nh',
    'Content-Length',
    '22190',
    'Host',
    'localhost:4000',
    'Connection',
    'Keep-Alive',
    'Accept-Encoding',
    'gzip',
    'Cookie',
    'connect.sid=s%3AbMLxjgvGYkYhbgNTCuwjkGBFB3JgyftX.6KVsGGuf%2F
oxp7XUwpm48HxGv6FvndjNjpgiTRpHzUJw; token=eyJhbGciOiJIUzI1NiIsInR
5cCI6IkpXVCJ9.eyJfaWQiOiI2ODM5MDkyNDcwNjA3YjIwZGQ0ZWQ3MjMiLCJmdWx
sTmFtZSI6Ik11c2xpbSBzdHVkZW50cyBzb2NpZXR5IG9mIE5pZ2VyaWEgT0FVIGJy
YW5jaCIsInJvbGUiOiJvcmdhbml6ZXIiLCJlbWFpbEFkZHJlc3MiOiJtc3Nub2F1Q
GdtYWlsLmNvbSIsImV2ZW50c0F0dGVuZGVkIjpbXSwicGFzc3dvcmQiOiIkMmIkMT
AkNkJubFlabFVBZ3pULno5OXhRcEx6dWxSVU5MbW1ZZ3RFNGxQZEtFZDJ0WFkvYkt
aemJnb1MiLCJjcmVhdGVkQXQiOiIyMDI1LTA1LTMwVDAxOjI1OjU2LjQ2OVoiLCJf
X3YiOjAsImlhdCI6MTc0ODU2ODM4MSwiZXhwIjoxNzQ4NjU0NzgxfQ.SIj0c0jm1X
JaAPmoCy7ZmhGKMWChC1qm1m_Cbph9UD8'
  ],
  rawTrailers: [],
  joinDuplicateHeaders: null,
  aborted: false,
  upgrade: false,
  url: '/events',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Array],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 65536,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 193997060
    },
    _writableState: WritableState {
      highWaterMark: 65536,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17564420,
      [Symbol(kBufferedValue)]: null
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::4000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 15,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout 
{
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 37883,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 16,
        [Symbol(kAsyncContextFrame)]: undefined
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::4000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 15,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout 
{
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 37883,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 16,
        [Symbol(kAsyncContextFrame)]: undefined
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [Circular *2],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      _closed: false,
      _header: null,
      _keepAliveTimeout: 5000,
      _onPendingData: [Function: bound updateOutgoingData],
      req: [Circular *2],
      _sent100: false,
      _expect_continue: false,
      _maxRequestsPerSocket: 0,
      locals: [Object: null prototype] {},
      _startAt: undefined,
      _startTime: undefined,
      writeHead: [Function: writeHead],
      __onFinished: [Function],
      end: [Function: end],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kChunkedBuffer)]: [],
      [Symbol(kChunkedLength)]: 0,
      [Symbol(kSocket)]: [Circular *1],
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 65536,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', por
t: 46436 },
    [Symbol(async_id_symbol)]: 386,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  res: <ref *3> ServerResponse {
    _events: [Object: null prototype] {
      finish: [Array],
      end: [Function: onevent]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: [Circular *2],
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    locals: [Object: null prototype] {},
    _startAt: undefined,
    _startTime: undefined,
    writeHead: [Function: writeHead],
    __onFinished: [Function: listener] { queue: [Array] },
    end: [Function: end],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kChunkedBuffer)]: [],
    [Symbol(kChunkedLength)]: 0,
    [Symbol(kSocket)]: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *3],
      _peername: [Object],
      [Symbol(async_id_symbol)]: 386,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-
by': [Array] },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 65536,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/events',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/events',
    path: '/events',
    href: '/events',
    _raw: '/events'
  },
  params: [Object: null prototype] {},
  io: <ref *4> Server {
    _events: [Object: null prototype] {},
    _eventsCount: 0,
    _maxListeners: undefined,
    _nsps: Map(1) { '/' => [Namespace] },
    parentNsps: Map(0) {},
    parentNamespacesFromRegExp: Map(0) {},
    _path: '/socket.io',
    clientPathRegex: /^\/socket\.io\/socket\.io(\.msgpack|\.esm)?
(\.min)?\.js(\.map)?(?:\?|$)/,
    _connectTimeout: 45000,
    _serveClient: true,
    _parser: {
      protocol: 5,
      PacketType: [Object],
      Encoder: [class Encoder],
      Decoder: [class Decoder extends Emitter]
    },
    encoder: Encoder { replacer: undefined },
    opts: { cleanupEmptyChildNamespaces: false },
    _adapter: [class Adapter extends EventEmitter],
    sockets: Namespace {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      sockets: Map(0) {},
      _preConnectSockets: Map(0) {},
      _fns: [],
      _ids: 0,
      server: [Circular *4],
      name: '/',
      adapter: [Adapter],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    eio: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      middlewares: [],
      clients: {},
      clientsCount: 0,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    httpServer: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 6,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 65536,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::4000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 15,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout 
{
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 37883,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 17,
        [Symbol(triggerId)]: 16,
        [Symbol(kAsyncContextFrame)]: undefined
      }
    },
    engine: Server {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      middlewares: [],
      clients: {},
      clientsCount: 0,
      opts: [Object],
      ws: [WebSocketServer],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  secret: undefined,
  cookies: {
    'connect.sid': 's:bMLxjgvGYkYhbgNTCuwjkGBFB3JgyftX.6KVsGGuf/o
xp7XUwpm48HxGv6FvndjNjpgiTRpHzUJw',
    token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODM5
MDkyNDcwNjA3YjIwZGQ0ZWQ3MjMiLCJmdWxsTmFtZSI6Ik11c2xpbSBzdHVkZW50c
yBzb2NpZXR5IG9mIE5pZ2VyaWEgT0FVIGJyYW5jaCIsInJvbGUiOiJvcmdhbml6ZX
IiLCJlbWFpbEFkZHJlc3MiOiJtc3Nub2F1QGdtYWlsLmNvbSIsImV2ZW50c0F0dGV
uZGVkIjpbXSwicGFzc3dvcmQiOiIkMmIkMTAkNkJubFlabFVBZ3pULno5OXhRcEx6
dWxSVU5MbW1ZZ3RFNGxQZEtFZDJ0WFkvYktaemJnb1MiLCJjcmVhdGVkQXQiOiIyM
DI1LTA1LTMwVDAxOjI1OjU2LjQ2OVoiLCJfX3YiOjAsImlhdCI6MTc0ODU2ODM4MS
wiZXhwIjoxNzQ4NjU0NzgxfQ.SIj0c0jm1XJaAPmoCy7ZmhGKMWChC1qm1m_Cbph9
UD8'
  },
  signedCookies: [Object: null prototype] {},
  _startAt: [ 424848, 374335085 ],
  _startTime: 2025-05-30T02:10:45.986Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: undefined,
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/events',
    path: '/events',
    href: '/events',
    _raw: '/events'
  },
  sessionStore: MongoStore {
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    crypto: null,
    transformFunctions: {
      serialize: [Function: stringify],
      unserialize: [Function: parse]
    },
    clientP: Promise { [MongoClient] },
    options: {
      collectionName: 'sessions',
      ttl: 1209600,
      mongoOptions: {},
      autoRemove: 'native',
      autoRemoveInterval: 10,
      touchAfter: 0,
      stringify: true,
      crypto: [Object],
      mongoUrl: 'mongodb+srv://simplysaad24:LBz3KIiWm7cmX5NE@biog
raphyhub.wv3wf.mongodb.net/event-handler?retryWrites=true&w=major
ity&appName=event-handler'
    },
    collectionP: Promise { [Collection] },
    generate: [Function (anonymous)],
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false
  },
  sessionID: '43DBCKXz_M--0K9VAyyILlO_pCPHyT6_',
  session: Session {
    cookie: { path: '/', _expires: null, originalMaxAge: null, ht
tpOnly: true }
  },
  route: Route {
    path: '/events',
    stack: [ [Layer], [Layer], [Layer] ],
    methods: [Object: null prototype] { post: true }
  },
  currentUser: {
    _id: '6839092470607b20dd4ed723',
    fullName: 'Muslim students society of Nigeria OAU branch',
    role: 'organizer',
    emailAddress: 'mssnoau@gmail.com',
    eventsAttended: [],
    password: '$2b$10$6BnlYZlUAgzT.z99xQpLzulRUNLmmYgtE4lPdKEd2tX
Y/bKZzbgoS',
    createdAt: '2025-05-30T01:25:56.469Z',
    __v: 0,
    iat: 1748568381,
    exp: 1748654781
  },
  [Symbol(shapeMode)]: true,
  [Symbol(kCapture)]: false,
  [Symbol(kHeaders)]: {
    accept: '*/*',
    'user-agent': 'Teste Android/7.6.1(652)',
    'content-type': 'multipart/form-data; boundary=ReactNativeBlo
bUtil-aguks1szrwbj125hgbi1nh',
    'content-length': '22190',
    host: 'localhost:4000',
    connection: 'Keep-Alive',
    'accept-encoding': 'gzip',
    cookie: 'connect.sid=s%3AbMLxjgvGYkYhbgNTCuwjkGBFB3JgyftX.6KV
sGGuf%2Foxp7XUwpm48HxGv6FvndjNjpgiTRpHzUJw; token=eyJhbGciOiJIUzI
1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2ODM5MDkyNDcwNjA3YjIwZGQ0ZWQ3MjM
iLCJmdWxsTmFtZSI6Ik11c2xpbSBzdHVkZW50cyBzb2NpZXR5IG9mIE5pZ2VyaWEg
T0FVIGJyYW5jaCIsInJvbGUiOiJvcmdhbml6ZXIiLCJlbWFpbEFkZHJlc3MiOiJtc
3Nub2F1QGdtYWlsLmNvbSIsImV2ZW50c0F0dGVuZGVkIjpbXSwicGFzc3dvcmQiOi
IkMmIkMTAkNkJubFlabFVBZ3pULno5OXhRcEx6dWxSVU5MbW1ZZ3RFNGxQZEtFZDJ
0WFkvYktaemJnb1MiLCJjcmVhdGVkQXQiOiIyMDI1LTA1LTMwVDAxOjI1OjU2LjQ2
OVoiLCJfX3YiOjAsImlhdCI6MTc0ODU2ODM4MSwiZXhwIjoxNzQ4NjU0NzgxfQ.SI
j0c0jm1XJaAPmoCy7ZmhGKMWChC1qm1m_Cbph9UD8'
  },
  [Symbol(kHeadersCount)]: 16,
  [Symbol(kTrailers)]: null,
  [Symbol(kTrailersCount)]: 0
}
Error registering event: TypeError: Cannot read properties of und
efined (reading 'path')
    at /storage/emulated/0/projects/event-flow/Server/Routes/api.
route.js:67:26
    at Layer.handleRequest (/storage/emulated/0/projects/event-fl
ow/node_modules/router/lib/layer.js:152:17)
    at next (/storage/emulated/0/projects/event-flow/node_modules
/router/lib/route.js:157:13)
    at conditionalMulter (/storage/emulated/0/projects/event-flow
/Server/Routes/api.route.js:26:16)
    at Layer.handleRequest (/storage/emulated/0/projects/event-fl
ow/node_modules/router/lib/layer.js:152:17)
    at next (/storage/emulated/0/projects/event-flow/node_modules
/router/lib/route.js:157:13)
    at /storage/emulated/0/projects/event-flow/Server/Utils/auth.
middleware.js:23:50
    at /storage/emulated/0/projects/event-flow/node_modules/jsonw
ebtoken/verify.js:261:12
    at getSecret (/storage/emulated/0/projects/event-flow/node_mo
dules/jsonwebtoken/verify.js:97:14)
    at module.exports [as verify] (/storage/emulated/0/projects/e
vent-flow/node_modules/jsonwebtoken/verify.js:101:10)
POST /events 500 312.564 ms - 1309
TypeError: Cannot read properties of undefined (reading 'path')
    at /storage/emulated/0/projects/event-flow/Server/Routes/api.
route.js:67:26
    at Layer.handleRequest (/storage/emulated/0/projects/event-fl
ow/node_modules/router/lib/layer.js:152:17)
    at next (/storage/emulated/0/projects/event-flow/node_modules
/router/lib/route.js:157:13)
    at conditionalMulter (/storage/emulated/0/projects/event-flow
/Server/Routes/api.route.js:26:16)
    at Layer.handleRequest (/storage/emulated/0/projects/event-fl
ow/node_modules/router/lib/layer.js:152:17)
    at next (/storage/emulated/0/projects/event-flow/node_modules
/router/lib/route.js:157:13)
    at /storage/emulated/0/projects/event-flow/Server/Utils/auth.
middleware.js:23:50
    at /storage/emulated/0/projects/event-flow/node_modules/jsonw
ebtoken/verify.js:261:12
    at getSecret (/storage/emulated/0/projects/event-flow/node_mo
dules/jsonwebtoken/verify.js:97:14)
    at module.exports [as verify] (/storage/emulated/0/projects/e
vent-flow/node_modules/jsonwebtoken/verify.js:101:10)